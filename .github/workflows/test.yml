name: Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.24', '1.25']
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Tidy dependencies
        run: go mod tidy

      - name: Run tests
        run: go test -v -race -coverprofile="coverage.txt" -covermode="atomic" ./unittest/rules/...

      - name: Test generated rules
        run: go test -v ./unittest/rules/... -run TestGenerated

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: runner.os == 'Linux'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
          flags: unittests
          fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true

      - name: Tidy dependencies
        run: go mod tidy

      - name: Build
        run: go build -v .
